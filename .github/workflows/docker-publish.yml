name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: mariadb-client
  DB_NAME: testdb
  DB_USER: dbuser
  DB_PASS: dbpass

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    permissions:
      contents: read
      packages: write

    services:
      mariadb:
        image: mariadb:10.5.10
        env:
          MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes
          MARIADB_DATABASE: ${{ env.DB_NAME }}
          MARIADB_USER: ${{ env.DB_USER }}
          MARIADB_PASSWORD: ${{ env.DB_PASS }}
          MARIADB_INITDB_SKIP_TZINFO: yes
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Test image
        run: |
          echo "SELECT 'Test' as ' ';" | \
            docker run --rm --network ${{ job.container.network}} --interactive \
            $IMAGE_NAME:latest -A -B -h mariadb -D $DB_NAME -u $DB_USER -p$DB_PASS \
            || exit 1; \
          docker run --rm --network ${{ job.container.network}} --entrypoint mysqladmin \
            $IMAGE_NAME:latest ping -h mariadb -u $DB_USER -p$DB_PASS \
          ;

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/wehelpen/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
